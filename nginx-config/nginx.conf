#基于base镜像下的nginx配置
user root;
#工作进程数
worker_processes  2;
#开启jit，加快正则处理
pcre_jit on;
#守护进程关闭
#daemon off;
pid /var/run/nginx/nginx.pid;
#错误日志
error_log  /var/log/nginx/error.log warn;
#载入扩展
include /etc/nginx/modules/*.conf;

events {
    # 一个进程处理的连接数
    worker_connections  1024;
}

http {
    # 访问频率限制
    # $binary_remote_addr remote_addr标识做限制，“binary_”的目的是缩写内存占用量，是限制同一客户端ip地址
    # zone=one:10m 生成名字one,大小10M的内存块，来存储访问频次信息
    # rate=1r/s 同标识客户端访问频次
    limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;
    #limit_req_log_level info;
    #limit_req_status 503;

    # 并发限制
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    include       /etc/nginx/mime.types;
    # 方便echo输出
    default_type  text/plain;

    log_format  main escape=json '$remote_addr - $remote_user [$time_local] "$request" $status '
                      '"$http_host" "$request_uri" [$request_body] $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      '$upstream_addr $request_time $upstream_response_time ';

    #access_log  /var/log/nginx/access.log  main;

    #等待过长
    proxy_connect_timeout 600;
    proxy_read_timeout 600;
    proxy_send_timeout 600;
    proxy_buffer_size 64k;
    proxy_buffers   4 32k;
    proxy_busy_buffers_size 64k;
    proxy_temp_file_write_size 64k;
    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;

    #包体过大设置
    fastcgi_buffer_size 16k;
    fastcgi_buffers 16 16k;
    fastcgi_busy_buffers_size 16k;
    fastcgi_temp_file_write_size 16k;
    large_client_header_buffers 4 16k;
    client_max_body_size 300m;
    client_body_buffer_size 128k;
    client_body_temp_path /var/tmp/client_body_temp 3 2;

    sendfile        on;
    #tcp_nopush     on;
    #关闭长连接
    keepalive_timeout  0;
    #是否压缩传输
    gzip  on;

    #虚拟主机
    include /etc/nginx/conf.d/*.conf;
}
